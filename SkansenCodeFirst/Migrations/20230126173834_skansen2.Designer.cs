// <auto-generated />
using System;
using MSZcw.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SkansenCodeFirst.Migrations
{
    [DbContext(typeof(InstrukcjaDbContext))]
    [Migration("20230126173834_skansen2")]
    partial class skansen2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SkansenCodeFirst.Model.Inwentaryzacja", b =>
                {
                    b.Property<int>("InwentaryzacjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataRaportu")
                        .HasColumnType("datetime2");

                    b.Property<string>("Komentarz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PracownikId")
                        .HasColumnType("int");

                    b.Property<bool>("WymagaRenowacji")
                        .HasColumnType("bit");

                    b.Property<int>("ZabytekId")
                        .HasColumnType("int");

                    b.HasKey("InwentaryzacjaId");

                    b.HasIndex("PracownikId");

                    b.HasIndex("ZabytekId");

                    b.ToTable("Inwentaryzacje");
                });

            modelBuilder.Entity("SkansenCodeFirst.Model.Konserwacja", b =>
                {
                    b.Property<int>("KonserwacjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("KonserwacjaData")
                        .HasColumnType("datetime2");

                    b.Property<int>("PracownikId")
                        .HasColumnType("int");

                    b.Property<int>("ZabytekId")
                        .HasColumnType("int");

                    b.HasKey("KonserwacjaId");

                    b.HasIndex("PracownikId");

                    b.HasIndex("ZabytekId");

                    b.ToTable("CzynnosciKonserwacyjne");
                });

            modelBuilder.Entity("SkansenCodeFirst.Model.Pracownik", b =>
                {
                    b.Property<int>("PracownikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PracownikId");

                    b.ToTable("Pracownicy");
                });

            modelBuilder.Entity("SkansenCodeFirst.Model.Produkt", b =>
                {
                    b.Property<int>("ProduktId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("ProduktCena")
                        .HasColumnType("real");

                    b.Property<string>("ProduktName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProduktId");

                    b.ToTable("Produkty");
                });

            modelBuilder.Entity("SkansenCodeFirst.Model.Sprzedaz", b =>
                {
                    b.Property<int>("SprzedazId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataSprzedazy")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<int>("PracownikId")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("SprzedazId");

                    b.HasIndex("PracownikId");

                    b.HasIndex("ProduktId");

                    b.ToTable("Sprzedaze");
                });

            modelBuilder.Entity("SkansenCodeFirst.Model.Zabytek", b =>
                {
                    b.Property<int>("ZabytekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("WymagaRenowacji")
                        .HasColumnType("bit");

                    b.Property<string>("ZabytekNazwa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZabytekId");

                    b.ToTable("Zabytki");
                });

            modelBuilder.Entity("SkansenCodeFirst.Model.Inwentaryzacja", b =>
                {
                    b.HasOne("SkansenCodeFirst.Model.Pracownik", "Pracownik")
                        .WithMany("Inwentaryzacje")
                        .HasForeignKey("PracownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkansenCodeFirst.Model.Zabytek", "Zabytek")
                        .WithMany("Inwentaryzacje")
                        .HasForeignKey("ZabytekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pracownik");

                    b.Navigation("Zabytek");
                });

            modelBuilder.Entity("SkansenCodeFirst.Model.Konserwacja", b =>
                {
                    b.HasOne("SkansenCodeFirst.Model.Pracownik", "Pracownik")
                        .WithMany("Czynnosci")
                        .HasForeignKey("PracownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkansenCodeFirst.Model.Zabytek", "Zabytek")
                        .WithMany("Konserwacje")
                        .HasForeignKey("ZabytekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pracownik");

                    b.Navigation("Zabytek");
                });

            modelBuilder.Entity("SkansenCodeFirst.Model.Sprzedaz", b =>
                {
                    b.HasOne("SkansenCodeFirst.Model.Pracownik", "Pracownik")
                        .WithMany("Pracownicy")
                        .HasForeignKey("PracownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkansenCodeFirst.Model.Produkt", "Produkt")
                        .WithMany("Sprzedaze")
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pracownik");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("SkansenCodeFirst.Model.Pracownik", b =>
                {
                    b.Navigation("Czynnosci");

                    b.Navigation("Inwentaryzacje");

                    b.Navigation("Pracownicy");
                });

            modelBuilder.Entity("SkansenCodeFirst.Model.Produkt", b =>
                {
                    b.Navigation("Sprzedaze");
                });

            modelBuilder.Entity("SkansenCodeFirst.Model.Zabytek", b =>
                {
                    b.Navigation("Inwentaryzacje");

                    b.Navigation("Konserwacje");
                });
#pragma warning restore 612, 618
        }
    }
}
